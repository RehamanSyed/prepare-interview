import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import styles from "@/styles/Home.module.css";
import {
  Box,
  Button,
  Center,
  Container,
  Flex,
  Grid,
  GridItem,
  Heading,
} from "@chakra-ui/react";
import Link from "next/link";
import { useQuery } from "@tanstack/react-query";
import MainLayout from "@/layouts/main.layout";
import { getSession, signOut, useSession } from "next-auth/react";
import { useRouter } from "next/router";
export async function getServerSideProps(context) {
  const { req, res } = context;

  const session = await getSession({ req });

  console.log("Context ---<", session);

  if (!session) {
    return {
      redirect: {
        destination: "/auth/signin",
      },
    };
  }
  return {
    props: { session },
  };
}
const Home = () => {
  const route = useRouter();
  const { isLoading, error, data } = useQuery({
    queryKey: ["techData"],
    queryFn: () =>
      fetch("http://localhost:5000/api/v1/alltech").then((res) => res.json()),
  });

  const { data: session } = useSession();
  console.log("session data", session);
  if (session === null) {
    route.push("/auth/signin");
  }
  if (isLoading) return "Loading...";
  if (error) return "An error has occurred: " + error.message;
  return (
    <>
      <Head>
        <title>Prepare</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box maxH="calc(100vh)">
        
          <Flex justifyContent={"space-between"} alignItems={"center"}>
            <Heading textAlign={"center"} fontSize={20} my={10}>
              Welcome {session.user.email}
            </Heading>
            <Button colorScheme="red" onClick={() => signOut()}>
              Logout
            </Button>
          </Flex>
          <Grid templateColumns="repeat(3, 1fr)" gap={6}>
            {data.map((item, idx) => {
              return (
                <GridItem key={idx}>
                  <Link
                    href={{
                      pathname: `/${item.page}`,
                      query: {
                        content: `${item.technology}`,
                        page: `${item.page}`,
                      },
                    }}
                  >
                    <Box
                      p={10}
                      bg={"gray.100"}
                      textAlign={"center"}
                      rounded="lg"
                    >
                      <Heading
                        textTransform={"uppercase"}
                        fontWeight="light"
                        size={"md"}
                      >
                        {item.technology}
                      </Heading>
                    </Box>
                  </Link>
                </GridItem>
              );
            })}
          </Grid>
      
      </Box>
    </>
  );
};
export default Home;
Home.getLayout = function getLayout(page) {
  return <MainLayout>{page}</MainLayout>;
};
